//
// FacebookAdsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class FacebookAdsAPI {
    /**
     * enum for parameter sortField
     */
    public enum SortField_getAllFacebookAds: String { 
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case endTime = "end_time"
    }

    /**
     * enum for parameter sortDir
     */
    public enum SortDir_getAllFacebookAds: String { 
        case asc = "ASC"
        case desc = "DESC"
    }

    /**
     List facebook ads

     - parameter fields: (query) A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation. (optional)
     - parameter excludeFields: (query) A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation. (optional)
     - parameter count: (query) The number of records to return. Default value is 10. Maximum value is 1000 (optional, default to 10)
     - parameter offset: (query) Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (optional, default to 0)
     - parameter sortField: (query) Returns files sorted by the specified field. (optional)
     - parameter sortDir: (query) Determines the order direction for sorted results. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAllFacebookAds(fields: [String]? = nil, excludeFields: [String]? = nil, count: Int? = nil, offset: Int? = nil, sortField: SortField_getAllFacebookAds? = nil, sortDir: SortDir_getAllFacebookAds? = nil, completion: @escaping ((_ data: InlineResponse2008?,_ error: Error?) -> Void)) {
        getAllFacebookAdsWithRequestBuilder(fields: fields, excludeFields: excludeFields, count: count, offset: offset, sortField: sortField, sortDir: sortDir).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     List facebook ads
     - GET /facebook-ads

     - BASIC:
       - type: http
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "facebook_ads" : [ "", "" ],
  "_links" : [ {
    "schema" : "schema",
    "targetSchema" : "targetSchema",
    "method" : "GET",
    "rel" : "rel",
    "href" : "href"
  }, {
    "schema" : "schema",
    "targetSchema" : "targetSchema",
    "method" : "GET",
    "rel" : "rel",
    "href" : "href"
  } ],
  "total_items" : 0
}}]
     - parameter fields: (query) A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation. (optional)
     - parameter excludeFields: (query) A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation. (optional)
     - parameter count: (query) The number of records to return. Default value is 10. Maximum value is 1000 (optional, default to 10)
     - parameter offset: (query) Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. (optional, default to 0)
     - parameter sortField: (query) Returns files sorted by the specified field. (optional)
     - parameter sortDir: (query) Determines the order direction for sorted results. (optional)

     - returns: RequestBuilder<InlineResponse2008> 
     */
    open class func getAllFacebookAdsWithRequestBuilder(fields: [String]? = nil, excludeFields: [String]? = nil, count: Int? = nil, offset: Int? = nil, sortField: SortField_getAllFacebookAds? = nil, sortDir: SortDir_getAllFacebookAds? = nil) -> RequestBuilder<InlineResponse2008> {
        let path = "/facebook-ads"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields": fields, 
                        "exclude_fields": excludeFields, 
                        "count": count?.encodeToJSON(), 
                        "offset": offset?.encodeToJSON(), 
                        "sort_field": sortField?.rawValue, 
                        "sort_dir": sortDir?.rawValue
        ])


        let requestBuilder: RequestBuilder<InlineResponse2008>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Get facebook ad info

     - parameter outreachId: (path) The outreach id. 
     - parameter fields: (query) A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation. (optional)
     - parameter excludeFields: (query) A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFacebookAdsId(outreachId: String, fields: [String]? = nil, excludeFields: [String]? = nil, completion: @escaping ((_ data: InlineResponse2009?,_ error: Error?) -> Void)) {
        getFacebookAdsIdWithRequestBuilder(outreachId: outreachId, fields: fields, excludeFields: excludeFields).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get facebook ad info
     - GET /facebook-ads/{outreach_id}

     - BASIC:
       - type: http
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "_links" : [ {
    "schema" : "schema",
    "targetSchema" : "targetSchema",
    "method" : "GET",
    "rel" : "rel",
    "href" : "href"
  }, {
    "schema" : "schema",
    "targetSchema" : "targetSchema",
    "method" : "GET",
    "rel" : "rel",
    "href" : "href"
  } ],
  "canceled_at" : "2000-01-23T04:56:07.000+00:00",
  "channel" : {
    "fb_placement_feed" : true,
    "fb_placement_audience" : false,
    "ig_placement_feed" : false
  },
  "type" : "regular",
  "content" : {
    "attachments" : [ {
      "call_to_action" : "call_to_action",
      "image_url" : "image_url",
      "name" : "name",
      "link_url" : "link_url",
      "description" : "description"
    }, {
      "call_to_action" : "call_to_action",
      "image_url" : "image_url",
      "name" : "name",
      "link_url" : "link_url",
      "description" : "description"
    } ],
    "call_to_action" : "call_to_action",
    "image_url" : "image_url",
    "link_url" : "link_url",
    "description" : "description",
    "title" : "title",
    "message" : "message"
  },
  "feedback" : {
    "audience" : "audience",
    "compliance" : "compliance",
    "content" : "content",
    "budget" : "budget"
  },
  "show_report" : true,
  "email_source_name" : "email_source_name",
  "paused_at" : "2000-01-23T04:56:07.000+00:00",
  "updated_at" : "2000-01-23T04:56:07.000+00:00",
  "has_audience" : true,
  "has_content" : true,
  "published_time" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "budget" : {
    "duration" : 86400,
    "total_amount" : 500.0,
    "currency_code" : "USD"
  },
  "has_segment" : true,
  "is_connected" : true,
  "audience" : {
    "include_source_in_target" : true,
    "email_source" : {
      "name" : "name",
      "segment_type" : "segment_type",
      "list_name" : "list_name",
      "type" : "type",
      "is_segment" : true
    },
    "targeting_specs" : {
      "max_age" : 1,
      "gender" : 0,
      "locations" : {
        "regions" : [ "regions", "regions" ],
        "cities" : [ "cities", "cities" ],
        "countries" : [ "countries", "countries" ],
        "zips" : [ "zips", "zips" ]
      },
      "min_age" : 6,
      "interests" : [ {
        "name" : "name"
      }, {
        "name" : "name"
      } ]
    },
    "source_type" : "facebook",
    "type" : "Custom Audience",
    "lookalike_country_code" : "lookalike_country_code"
  },
  "thumbnail" : "thumbnail",
  "create_time" : "2000-01-23T04:56:07.000+00:00",
  "end_time" : "2000-01-23T04:56:07.000+00:00",
  "web_id" : 9,
  "start_time" : "2000-01-23T04:56:07.000+00:00",
  "site" : {
    "name" : "My Connected Site",
    "id" : 43,
    "url" : "www.example.com"
  },
  "recipients" : {
    "segment_opts" : {
      "prebuilt_segment_id" : "subscribers-female",
      "match" : "any",
      "saved_segment_id" : 5,
      "conditions" : [ { }, { } ]
    },
    "list_id" : "list_id",
    "segment_text" : "segment_text",
    "recipient_count" : 5,
    "list_name" : "list_name",
    "list_is_active" : true
  },
  "name" : "name",
  "needs_attention" : true,
  "report_summary" : {
    "unique_visits" : 7,
    "subscribes" : 1,
    "reach" : 1,
    "click_rate" : 2.027123023002322,
    "total_sent" : 5,
    "impressions" : 7.457744773683766,
    "unique_opens" : 2,
    "subscriber_clicks" : 3,
    "visits" : 4,
    "ecommerce" : {
      "average_order_revenue" : 6.84685269835264,
      "total_revenue" : 1.4894159098541704,
      "currency_code" : "currency_code"
    },
    "opens" : 5,
    "clicks" : 9,
    "engagements" : 4,
    "conversion_rate" : 1.2315135367772556,
    "open_rate" : 7.061401241503109
  },
  "status" : "save",
  "was_canceled_by_facebook" : true
}}]
     - parameter outreachId: (path) The outreach id. 
     - parameter fields: (query) A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation. (optional)
     - parameter excludeFields: (query) A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation. (optional)

     - returns: RequestBuilder<InlineResponse2009> 
     */
    open class func getFacebookAdsIdWithRequestBuilder(outreachId: String, fields: [String]? = nil, excludeFields: [String]? = nil) -> RequestBuilder<InlineResponse2009> {
        var path = "/facebook-ads/{outreach_id}"
        let outreachIdPreEscape = "\(outreachId)"
        let outreachIdPostEscape = outreachIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{outreach_id}", with: outreachIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields": fields, 
                        "exclude_fields": excludeFields
        ])


        let requestBuilder: RequestBuilder<InlineResponse2009>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
