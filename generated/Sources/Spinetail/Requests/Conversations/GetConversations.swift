//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import PrchModel

extension Conversations {

    /**
    List conversations

    Get a list of conversations for the account. Conversations has been deprecated in favor of Inbox and these endpoints don't include Inbox data. Past Conversations are still available via this endpoint, but new campaign replies and other Inbox messages arenâ€™t available using this endpoint.
    */
    public struct GetConversations : ServiceCall {

        public static let pathTemplate = "/conversations"

        public var method : RequestMethod {
            .GET
        }


        /** A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation. */
        public var fields: [String]?

        /** A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation. */
        public var excludeFields: [String]?

        /** The number of records to return. Default value is 10. Maximum value is 1000 */
        public var count: Int?

        /** Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. */
        public var offset: Int?

        /** Whether the conversation has any unread messages. */
        public var hasUnreadMessages: HasUnreadMessages?

        /** The unique id for the list. */
        public var listId: String?

        /** The unique id for the campaign. */
        public var campaignId: String?

        //public static let service = APIService<Response>(id: "getConversations", tag: "conversations", method: "GET", path: "/conversations", hasBody: false, securityRequirements: [SecurityRequirement(type: "basicAuth", scopes: [])])

        /** Whether the conversation has any unread messages. */
        public enum HasUnreadMessages: String, Codable, Equatable, CaseIterable {
            case `true` = "true"
            case `false` = "false"
        }

        public typealias SuccessType = TrackedConversations
    }
}
