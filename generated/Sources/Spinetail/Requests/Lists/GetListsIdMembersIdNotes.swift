//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import PrchModel

extension Lists {

    /**
    List recent member notes

    Get recent notes for a specific list member.
    */
    public struct GetListsIdMembersIdNotes : ServiceCall {

        public static let pathTemplate = "/lists/{list_id}/members/{subscriber_hash}/notes"

        public var method : RequestMethod {
            .GET
        }


        /** The unique ID for the list. */
        public var listId: String

        /** The MD5 hash of the lowercase version of the list member's email address. */
        public var subscriberHash: String

        /** Returns notes sorted by the specified field. */
        public var sortField: SortField?

        /** Determines the order direction for sorted results. */
        public var sortDir: SortDir?

        /** A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation. */
        public var fields: [String]?

        /** A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation. */
        public var excludeFields: [String]?

        /** The number of records to return. Default value is 10. Maximum value is 1000 */
        public var count: Int?

        /** Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. */
        public var offset: Int?

        //public static let service = APIService<Response>(id: "getListsIdMembersIdNotes", tag: "lists", method: "GET", path: "/lists/{list_id}/members/{subscriber_hash}/notes", hasBody: false, securityRequirements: [SecurityRequirement(type: "basicAuth", scopes: [])])

        /** Returns notes sorted by the specified field. */
        public enum SortField: String, Codable, Equatable, CaseIterable {
            case createdAt = "created_at"
            case updatedAt = "updated_at"
            case noteId = "note_id"
        }

        /** Determines the order direction for sorted results. */
        public enum SortDir: String, Codable, Equatable, CaseIterable {
            case asc = "ASC"
            case desc = "DESC"
        }

        public typealias SuccessType = CollectionOfNotes
    }
}
