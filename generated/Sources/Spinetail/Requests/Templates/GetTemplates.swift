//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import PrchModel

extension Templates {

    /**
    List templates

    Get a list of an account's available templates.
    */
    public struct GetTemplates : ServiceCall {

        public static let pathTemplate = "/templates"

        public var method : RequestMethod {
            .GET
        }


        /** A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation. */
        public var fields: [String]?

        /** A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation. */
        public var excludeFields: [String]?

        /** The number of records to return. Default value is 10. Maximum value is 1000 */
        public var count: Int?

        /** Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. */
        public var offset: Int?

        /** The Mailchimp account user who created the template. */
        public var createdBy: String?

        /** Restrict the response to templates created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00. */
        public var sinceDateCreated: String?

        /** Restrict the response to templates created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00. */
        public var beforeDateCreated: String?

        /** Limit results based on template type. */
        public var type: String?

        /** Limit results based on category. */
        public var category: String?

        /** The unique folder id. */
        public var folderId: String?

        /** Returns user templates sorted by the specified field. */
        public var sortField: SortField?

        /** Determines the order direction for sorted results. */
        public var sortDir: SortDir?

        //public static let service = APIService<Response>(id: "getTemplates", tag: "templates", method: "GET", path: "/templates", hasBody: false, securityRequirements: [SecurityRequirement(type: "basicAuth", scopes: [])])

        /** Returns user templates sorted by the specified field. */
        public enum SortField: String, Codable, Equatable, CaseIterable {
            case dateCreated = "date_created"
            case dateEdited = "date_edited"
            case name = "name"
        }

        /** Determines the order direction for sorted results. */
        public enum SortDir: String, Codable, Equatable, CaseIterable {
            case asc = "ASC"
            case desc = "DESC"
        }

        public typealias SuccessType = Templates
    }
}
