//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import PrchModel

extension Automations {

    /**
    Get automated email subscriber

    Get information about a specific subscriber in a classic automation email queue.
    */
    public struct GetAutomationsIdEmailsIdQueueId : ServiceCall {
        public static var requiresCredentials: Bool {
            return false
        }
        public typealias ServiceAPI = SpinetailAPI

        public static let pathTemplate = "/automations/{workflow_id}/emails/{workflow_email_id}/queue/{subscriber_hash}"

        public var path: String {
            return Self.pathTemplate.replacingOccurrences(of: "{" + "workflow_id" + "}", with: "\(self.workflowId)").replacingOccurrences(of: "{" + "workflow_email_id" + "}", with: "\(self.workflowEmailId)").replacingOccurrences(of: "{" + "subscriber_hash" + "}", with: "\(self.subscriberHash)")
        }

        public var method : RequestMethod {
            .GET
        }


        /** The unique id for the Automation workflow. */
        public var workflowId: String

        /** The unique id for the Automation workflow email. */
        public var workflowEmailId: String

        /** The MD5 hash of the lowercase version of the list member's email address. */
        public var subscriberHash: String


        public var parameters: [String : String] { [:] }

        public var headers: [String : String] { [:] }


        //public static let service = APIService<Response>(id: "getAutomationsIdEmailsIdQueueId", tag: "automations", method: "GET", path: "/automations/{workflow_id}/emails/{workflow_email_id}/queue/{subscriber_hash}", hasBody: false, securityRequirements: [SecurityRequirement(type: "basicAuth", scopes: [])])

        public typealias SuccessType = SubscriberInAutomationQueue2Model
        public typealias BodyType =  Empty

    }
}
