//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import PrchModel

extension Reports {

    /**
    List campaign reports

    Get campaign reports.
    */
    public struct GetReports : ServiceCall {

        public static let pathTemplate = "/reports"

        public var method : RequestMethod {
            .GET
        }


        /** A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation. */
        public var fields: [String]?

        /** A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation. */
        public var excludeFields: [String]?

        /** The number of records to return. Default value is 10. Maximum value is 1000 */
        public var count: Int?

        /** Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0. */
        public var offset: Int?

        /** The campaign type. */
        public var type: `Type`?

        /** Restrict the response to campaigns sent before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00. */
        public var beforeSendTime: DateTime?

        /** Restrict the response to campaigns sent after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00. */
        public var sinceSendTime: DateTime?

        //public static let service = APIService<Response>(id: "getReports", tag: "reports", method: "GET", path: "/reports", hasBody: false, securityRequirements: [SecurityRequirement(type: "basicAuth", scopes: [])])

        /** The campaign type. */
        public enum `Type`: String, Codable, Equatable, CaseIterable {
            case regular = "regular"
            case plaintext = "plaintext"
            case absplit = "absplit"
            case rss = "rss"
            case variate = "variate"
        }

        public typealias SuccessType = CampaignReports1
    }
}
