//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import PrchModel

extension Reporting {

    /**
    List answers for question

    Get answers for a survey question.
    */
    public struct GetReportingSurveysIdQuestionsIdAnswers : ServiceCall {

        public static let pathTemplate = "/reporting/surveys/{outreach_id}/questions/{question_id}/answers"

        public var method : RequestMethod {
            .GET
        }


        /** A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation. */
        public var fields: [String]?

        /** A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation. */
        public var excludeFields: [String]?

        /** The outreach id. */
        public var outreachId: String

        /** The ID of the survey question. */
        public var questionId: String

        /** Filter survey responses by familiarity of the respondents. */
        public var respondentFamiliarityIs: RespondentFamiliarityIs?

        //public static let service = APIService<Response>(id: "getReportingSurveysIdQuestionsIdAnswers", tag: "reporting", method: "GET", path: "/reporting/surveys/{outreach_id}/questions/{question_id}/answers", hasBody: false, securityRequirements: [SecurityRequirement(type: "basicAuth", scopes: [])])

        /** Filter survey responses by familiarity of the respondents. */
        public enum RespondentFamiliarityIs: String, Codable, Equatable, CaseIterable {
            case new = "new"
            case known = "known"
            case unknown = "unknown"
        }

        public typealias SuccessType = GetReportingSurveysIdQuestionsIdAnswers200Response
    }
}
