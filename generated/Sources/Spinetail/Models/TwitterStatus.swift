//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** An individual tweet. */
public struct TwitterStatus: Codable, Equatable, Content {

    /** A timestamp for the tweet. */
    public var datetime: DateTime?

    /** A 'true' or 'false' status of whether the tweet is a retweet. */
    public var isRetweet: Bool?

    /** The Twitter handle for the author of the tweet. */
    public var screenName: String?

    /** The body of the tweet. */
    public var status: String?

    /** The individual id for the tweet. */
    public var statusId: String?

    public init(datetime: DateTime? = nil, isRetweet: Bool? = nil, screenName: String? = nil, status: String? = nil, statusId: String? = nil) {
        self.datetime = datetime
        self.isRetweet = isRetweet
        self.screenName = screenName
        self.status = status
        self.statusId = statusId
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        datetime = try container.decodeIfPresent("datetime")
        isRetweet = try container.decodeIfPresent("is_retweet")
        screenName = try container.decodeIfPresent("screen_name")
        status = try container.decodeIfPresent("status")
        statusId = try container.decodeIfPresent("status_id")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(datetime, forKey: "datetime")
        try container.encodeIfPresent(isRetweet, forKey: "is_retweet")
        try container.encodeIfPresent(screenName, forKey: "screen_name")
        try container.encodeIfPresent(status, forKey: "status")
        try container.encodeIfPresent(statusId, forKey: "status_id")
    }

}
