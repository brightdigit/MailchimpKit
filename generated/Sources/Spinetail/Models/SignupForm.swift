//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** List signup form. */
public struct SignupForm: Codable, Equatable, Content {

    /** A list of link types and descriptions for the API schema documents. */
    public var links: [ResourceLink]?

    /** The signup form body content. */
    public var contents: [CollectionOfContentForListSignupForms]?

    public var header: SignupFormHeaderOptions?

    /** The signup form's list id. */
    public var listId: String?

    /** Signup form URL. */
    public var signupFormURL: String?

    /** An array of objects, each representing an element style for the signup form. */
    public var styles: [CollectionOfElementStyleForListSignupForms]?

    public init(links: [ResourceLink]? = nil, contents: [CollectionOfContentForListSignupForms]? = nil, header: SignupFormHeaderOptions? = nil, listId: String? = nil, signupFormURL: String? = nil, styles: [CollectionOfElementStyleForListSignupForms]? = nil) {
        self.links = links
        self.contents = contents
        self.header = header
        self.listId = listId
        self.signupFormURL = signupFormURL
        self.styles = styles
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        links = try container.decodeArrayIfPresent("_links")
        contents = try container.decodeArrayIfPresent("contents")
        header = try container.decodeIfPresent("header")
        listId = try container.decodeIfPresent("list_id")
        signupFormURL = try container.decodeIfPresent("signup_form_url")
        styles = try container.decodeArrayIfPresent("styles")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(links, forKey: "_links")
        try container.encodeIfPresent(contents, forKey: "contents")
        try container.encodeIfPresent(header, forKey: "header")
        try container.encodeIfPresent(listId, forKey: "list_id")
        try container.encodeIfPresent(signupFormURL, forKey: "signup_form_url")
        try container.encodeIfPresent(styles, forKey: "styles")
    }

}
