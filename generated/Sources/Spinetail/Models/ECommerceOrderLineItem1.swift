//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** Information about a specific order line. */
public struct ECommerceOrderLineItem1: Codable, Equatable, Content {

    /** A unique identifier for the order line item. */
    public var id: String

    /** The price of an order line item. */
    public var price: Double

    /** A unique identifier for the product associated with the order line item. */
    public var productId: String

    /** A unique identifier for the product variant associated with the order line item. */
    public var productVariantId: String

    /** The quantity of an order line item. */
    public var quantity: Int

    /** The total discount amount applied to this line item. */
    public var discount: Double?

    public init(id: String, price: Double, productId: String, productVariantId: String, quantity: Int, discount: Double? = nil) {
        self.id = id
        self.price = price
        self.productId = productId
        self.productVariantId = productVariantId
        self.quantity = quantity
        self.discount = discount
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        id = try container.decode("id")
        price = try container.decode("price")
        productId = try container.decode("product_id")
        productVariantId = try container.decode("product_variant_id")
        quantity = try container.decode("quantity")
        discount = try container.decodeIfPresent("discount")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(id, forKey: "id")
        try container.encode(price, forKey: "price")
        try container.encode(productId, forKey: "product_id")
        try container.encode(productVariantId, forKey: "product_variant_id")
        try container.encode(quantity, forKey: "quantity")
        try container.encodeIfPresent(discount, forKey: "discount")
    }

}
