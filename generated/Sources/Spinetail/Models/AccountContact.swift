//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** Information about the account contact. */
public struct AccountContact: Codable, Equatable, Content {

    /** The street address for the account contact. */
    public var addr1: String?

    /** The street address for the account contact. */
    public var addr2: String?

    /** The city for the account contact. */
    public var city: String?

    /** The company name for the account. */
    public var company: String?

    /** The country for the account contact. */
    public var country: String?

    /** The state for the account contact. */
    public var state: String?

    /** The zip code for the account contact. */
    public var zip: String?

    public init(addr1: String? = nil, addr2: String? = nil, city: String? = nil, company: String? = nil, country: String? = nil, state: String? = nil, zip: String? = nil) {
        self.addr1 = addr1
        self.addr2 = addr2
        self.city = city
        self.company = company
        self.country = country
        self.state = state
        self.zip = zip
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        addr1 = try container.decodeIfPresent("addr1")
        addr2 = try container.decodeIfPresent("addr2")
        city = try container.decodeIfPresent("city")
        company = try container.decodeIfPresent("company")
        country = try container.decodeIfPresent("country")
        state = try container.decodeIfPresent("state")
        zip = try container.decodeIfPresent("zip")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(addr1, forKey: "addr1")
        try container.encodeIfPresent(addr2, forKey: "addr2")
        try container.encodeIfPresent(city, forKey: "city")
        try container.encodeIfPresent(company, forKey: "company")
        try container.encodeIfPresent(country, forKey: "country")
        try container.encodeIfPresent(state, forKey: "state")
        try container.encodeIfPresent(zip, forKey: "zip")
    }

}
