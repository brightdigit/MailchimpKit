//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** The average campaign statistics for your list. This won't be present if we haven't calculated it yet for this list. */
public struct ListStats: Codable, Equatable, Content {

    /** The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list. */
    public var clickRate: Double?

    /** The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list. */
    public var openRate: Double?

    /** The average number of subscriptions per month for the list. */
    public var subRate: Double?

    /** The average number of unsubscriptions per month for the list. */
    public var unsubRate: Double?

    public init(clickRate: Double? = nil, openRate: Double? = nil, subRate: Double? = nil, unsubRate: Double? = nil) {
        self.clickRate = clickRate
        self.openRate = openRate
        self.subRate = subRate
        self.unsubRate = unsubRate
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        clickRate = try container.decodeIfPresent("click_rate")
        openRate = try container.decodeIfPresent("open_rate")
        subRate = try container.decodeIfPresent("sub_rate")
        unsubRate = try container.decodeIfPresent("unsub_rate")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(clickRate, forKey: "click_rate")
        try container.encodeIfPresent(openRate, forKey: "open_rate")
        try container.encodeIfPresent(subRate, forKey: "sub_rate")
        try container.encodeIfPresent(unsubRate, forKey: "unsub_rate")
    }

}
