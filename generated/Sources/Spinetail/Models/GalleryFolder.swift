//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** An individual folder listed in the File Manager. */
public struct GalleryFolder: Codable, Equatable, Content {

    /** A list of link types and descriptions for the API schema documents. */
    public var links: [ResourceLink]?

    /** The date and time a file was added to the File Manager in ISO 8601 format. */
    public var createdAt: DateTime?

    /** The username of the profile that created the folder. */
    public var createdBy: String?

    /** The number of files in the folder. */
    public var fileCount: Int?

    /** The unique id for the folder. */
    public var id: Int?

    /** The name of the folder. */
    public var name: String?

    public init(links: [ResourceLink]? = nil, createdAt: DateTime? = nil, createdBy: String? = nil, fileCount: Int? = nil, id: Int? = nil, name: String? = nil) {
        self.links = links
        self.createdAt = createdAt
        self.createdBy = createdBy
        self.fileCount = fileCount
        self.id = id
        self.name = name
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        links = try container.decodeArrayIfPresent("_links")
        createdAt = try container.decodeIfPresent("created_at")
        createdBy = try container.decodeIfPresent("created_by")
        fileCount = try container.decodeIfPresent("file_count")
        id = try container.decodeIfPresent("id")
        name = try container.decodeIfPresent("name")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(links, forKey: "_links")
        try container.encodeIfPresent(createdAt, forKey: "created_at")
        try container.encodeIfPresent(createdBy, forKey: "created_by")
        try container.encodeIfPresent(fileCount, forKey: "file_count")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(name, forKey: "name")
    }

}
