//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
public struct GetAllFacebookAds200ResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs: Codable, Equatable, Content {

    public var gender: Int?

    public var interests: [GetAllFacebookAds200ResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsInterestsInner]?

    public var locations: GetAllFacebookAds200ResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsLocations?

    public var maxAge: Int?

    public var minAge: Int?

    public init(gender: Int? = nil, interests: [GetAllFacebookAds200ResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsInterestsInner]? = nil, locations: GetAllFacebookAds200ResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsLocations? = nil, maxAge: Int? = nil, minAge: Int? = nil) {
        self.gender = gender
        self.interests = interests
        self.locations = locations
        self.maxAge = maxAge
        self.minAge = minAge
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        gender = try container.decodeIfPresent("gender")
        interests = try container.decodeArrayIfPresent("interests")
        locations = try container.decodeIfPresent("locations")
        maxAge = try container.decodeIfPresent("max_age")
        minAge = try container.decodeIfPresent("min_age")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(gender, forKey: "gender")
        try container.encodeIfPresent(interests, forKey: "interests")
        try container.encodeIfPresent(locations, forKey: "locations")
        try container.encodeIfPresent(maxAge, forKey: "max_age")
        try container.encodeIfPresent(minAge, forKey: "min_age")
    }

}
