//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** Available triggers for Automation workflows. */
public struct AutomationTriggerModel: Codable, Equatable, Content {

    /** The type of Automation workflow. */
    public enum WorkflowType: String, Codable, Equatable, CaseIterable {
        case abandonedBrowse = "abandonedBrowse"
        case abandonedCart = "abandonedCart"
        case api = "api"
        case bestCustomers = "bestCustomers"
        case categoryFollowup = "categoryFollowup"
        case dateAdded = "dateAdded"
        case emailFollowup = "emailFollowup"
        case emailSeries = "emailSeries"
        case groupAdd = "groupAdd"
        case groupRemove = "groupRemove"
        case mandrill = "mandrill"
        case productFollowup = "productFollowup"
        case purchaseFollowup = "purchaseFollowup"
        case recurringEvent = "recurringEvent"
        case specialEvent = "specialEvent"
        case visitUrl = "visitUrl"
        case welcomeSeries = "welcomeSeries"
    }

    /** The type of Automation workflow. */
    public var workflowType: WorkflowType

    public var runtime: AutomationWorkflowRuntimeSettingsModel?

    /** The number of emails in the Automation workflow. */
    public var workflowEmailsCount: Int?

    /** The title of the workflow type. */
    public var workflowTitle: String?

    public init(workflowType: WorkflowType, runtime: AutomationWorkflowRuntimeSettingsModel? = nil, workflowEmailsCount: Int? = nil, workflowTitle: String? = nil) {
        self.workflowType = workflowType
        self.runtime = runtime
        self.workflowEmailsCount = workflowEmailsCount
        self.workflowTitle = workflowTitle
    }

    public enum CodingKeys: String, CodingKey {
        case workflowType = "workflow_type"
        case runtime = "runtime"
        case workflowEmailsCount = "workflow_emails_count"
        case workflowTitle = "workflow_title"
    }


}
