//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** A summary of Twitter activity for a campaign. */
public struct TwitterStats: Codable, Equatable, Content {

    /** The day and time of the first recorded tweet with a link to the campaign. */
    public var firstTweet: String?

    /** The day and time of the last recorded tweet with a link to the campaign. */
    public var lastTweet: String?

    /** The number of retweets that include a link to the campaign. */
    public var retweets: Int?

    /** A summary of tweets that include a link to the campaign. */
    public var statuses: [TwitterStatus]?

    /** The number of tweets including a link to the campaign. */
    public var tweets: Int?

    public init(firstTweet: String? = nil, lastTweet: String? = nil, retweets: Int? = nil, statuses: [TwitterStatus]? = nil, tweets: Int? = nil) {
        self.firstTweet = firstTweet
        self.lastTweet = lastTweet
        self.retweets = retweets
        self.statuses = statuses
        self.tweets = tweets
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        firstTweet = try container.decodeIfPresent("first_tweet")
        lastTweet = try container.decodeIfPresent("last_tweet")
        retweets = try container.decodeIfPresent("retweets")
        statuses = try container.decodeArrayIfPresent("statuses")
        tweets = try container.decodeIfPresent("tweets")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(firstTweet, forKey: "first_tweet")
        try container.encodeIfPresent(lastTweet, forKey: "last_tweet")
        try container.encodeIfPresent(retweets, forKey: "retweets")
        try container.encodeIfPresent(statuses, forKey: "statuses")
        try container.encodeIfPresent(tweets, forKey: "tweets")
    }

}
