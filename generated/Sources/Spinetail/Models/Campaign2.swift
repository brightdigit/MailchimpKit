//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** A summary of an individual campaign's settings and content. */
public struct Campaign2: Codable, Equatable, Content {

    public var settings: CampaignSettings4

    public var recipients: List5?

    public var rssOpts: RSSOptions2?

    public var socialCard: CampaignSocialCard?

    public var tracking: CampaignTrackingOptions1?

    public var variateSettings: ABTestOptions1?

    public init(settings: CampaignSettings4, recipients: List5? = nil, rssOpts: RSSOptions2? = nil, socialCard: CampaignSocialCard? = nil, tracking: CampaignTrackingOptions1? = nil, variateSettings: ABTestOptions1? = nil) {
        self.settings = settings
        self.recipients = recipients
        self.rssOpts = rssOpts
        self.socialCard = socialCard
        self.tracking = tracking
        self.variateSettings = variateSettings
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        settings = try container.decode("settings")
        recipients = try container.decodeIfPresent("recipients")
        rssOpts = try container.decodeIfPresent("rss_opts")
        socialCard = try container.decodeIfPresent("social_card")
        tracking = try container.decodeIfPresent("tracking")
        variateSettings = try container.decodeIfPresent("variate_settings")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(settings, forKey: "settings")
        try container.encodeIfPresent(recipients, forKey: "recipients")
        try container.encodeIfPresent(rssOpts, forKey: "rss_opts")
        try container.encodeIfPresent(socialCard, forKey: "social_card")
        try container.encodeIfPresent(tracking, forKey: "tracking")
        try container.encodeIfPresent(variateSettings, forKey: "variate_settings")
    }

}
