//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
public struct ListsInner: Codable, Equatable, Content {

    /** The ISO 3166 2 digit country code. */
    public var countryCode: String?

    /** The number of unique campaign opens for a region. */
    public var opens: Int?

    /** An internal code for the region representing the more specific location area such as city or state. When this is blank, it indicates we know the country, but not the region. */
    public var region: String?

    /** The name of the region, if we have one. For blank "region" values, this will be "Rest of Country". */
    public var regionName: String?

    public init(countryCode: String? = nil, opens: Int? = nil, region: String? = nil, regionName: String? = nil) {
        self.countryCode = countryCode
        self.opens = opens
        self.region = region
        self.regionName = regionName
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        countryCode = try container.decodeIfPresent("country_code")
        opens = try container.decodeIfPresent("opens")
        region = try container.decodeIfPresent("region")
        regionName = try container.decodeIfPresent("region_name")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(countryCode, forKey: "country_code")
        try container.encodeIfPresent(opens, forKey: "opens")
        try container.encodeIfPresent(region, forKey: "region")
        try container.encodeIfPresent(regionName, forKey: "region_name")
    }

}
