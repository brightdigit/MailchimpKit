//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** A single instance of a campaign referral. */
public struct Referrer: Codable, Equatable, Content {

    /** The number of clicks a single referrer generated. */
    public var clicks: Int?

    /** The timestamp for the first click from this referrer. */
    public var firstClick: DateTime?

    /** The timestamp for the last click from this referrer. */
    public var lastClick: DateTime?

    /** A referrer (truncated to 100 bytes). */
    public var referrer: String?

    public init(clicks: Int? = nil, firstClick: DateTime? = nil, lastClick: DateTime? = nil, referrer: String? = nil) {
        self.clicks = clicks
        self.firstClick = firstClick
        self.lastClick = lastClick
        self.referrer = referrer
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        clicks = try container.decodeIfPresent("clicks")
        firstClick = try container.decodeIfPresent("first_click")
        lastClick = try container.decodeIfPresent("last_click")
        referrer = try container.decodeIfPresent("referrer")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(clicks, forKey: "clicks")
        try container.encodeIfPresent(firstClick, forKey: "first_click")
        try container.encodeIfPresent(lastClick, forKey: "last_click")
        try container.encodeIfPresent(referrer, forKey: "referrer")
    }

}
