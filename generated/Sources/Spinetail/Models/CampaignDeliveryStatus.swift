//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** Updates on campaigns in the process of sending. */
public struct CampaignDeliveryStatus: Codable, Equatable, Content {

    /** The current state of a campaign delivery. */
    public enum Status: String, Codable, Equatable, CaseIterable {
        case delivering = "delivering"
        case delivered = "delivered"
        case canceling = "canceling"
        case canceled = "canceled"
    }

    /** Whether a campaign send can be canceled. */
    public var canCancel: Bool?

    /** The total number of emails canceled for this campaign. */
    public var emailsCanceled: Int?

    /** The total number of emails confirmed sent for this campaign so far. */
    public var emailsSent: Int?

    /** Whether Campaign Delivery Status is enabled for this account and campaign. */
    public var enabled: Bool?

    /** The current state of a campaign delivery. */
    public var status: Status?

    public init(canCancel: Bool? = nil, emailsCanceled: Int? = nil, emailsSent: Int? = nil, enabled: Bool? = nil, status: Status? = nil) {
        self.canCancel = canCancel
        self.emailsCanceled = emailsCanceled
        self.emailsSent = emailsSent
        self.enabled = enabled
        self.status = status
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        canCancel = try container.decodeIfPresent("can_cancel")
        emailsCanceled = try container.decodeIfPresent("emails_canceled")
        emailsSent = try container.decodeIfPresent("emails_sent")
        enabled = try container.decodeIfPresent("enabled")
        status = try container.decodeIfPresent("status")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(canCancel, forKey: "can_cancel")
        try container.encodeIfPresent(emailsCanceled, forKey: "emails_canceled")
        try container.encodeIfPresent(emailsSent, forKey: "emails_sent")
        try container.encodeIfPresent(enabled, forKey: "enabled")
        try container.encodeIfPresent(status, forKey: "status")
    }

}
