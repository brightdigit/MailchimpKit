//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** A specific feedback message from a specific campaign. */
public struct CampaignFeedback1: Codable, Equatable, Content {

    /** The content of the feedback. */
    public var message: String

    /** The block id for the editable block that the feedback addresses. */
    public var blockId: Int?

    /** The status of feedback. */
    public var isComplete: Bool?

    public init(message: String, blockId: Int? = nil, isComplete: Bool? = nil) {
        self.message = message
        self.blockId = blockId
        self.isComplete = isComplete
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        message = try container.decode("message")
        blockId = try container.decodeIfPresent("block_id")
        isComplete = try container.decodeIfPresent("is_complete")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(message, forKey: "message")
        try container.encodeIfPresent(blockId, forKey: "block_id")
        try container.encodeIfPresent(isComplete, forKey: "is_complete")
    }

}
