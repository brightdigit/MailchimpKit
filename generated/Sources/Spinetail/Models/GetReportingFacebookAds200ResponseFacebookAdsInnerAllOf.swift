//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
public struct GetReportingFacebookAds200ResponseFacebookAdsInnerAllOf: Codable, Equatable, Content {

    public var audience: GetAllFacebookAds200ResponseFacebookAdsInnerAllOf2Audience?

    public var audienceActivity: GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivity?

    public var budget: GetAllFacebookAds200ResponseFacebookAdsInnerAllOf2Budget?

    public var channel: GetAllFacebookAds200ResponseFacebookAdsInnerAllOf2Channel?

    public var reportSummary: GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummary?

    public init(audience: GetAllFacebookAds200ResponseFacebookAdsInnerAllOf2Audience? = nil, audienceActivity: GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfAudienceActivity? = nil, budget: GetAllFacebookAds200ResponseFacebookAdsInnerAllOf2Budget? = nil, channel: GetAllFacebookAds200ResponseFacebookAdsInnerAllOf2Channel? = nil, reportSummary: GetReportingFacebookAds200ResponseFacebookAdsInnerAllOfReportSummary? = nil) {
        self.audience = audience
        self.audienceActivity = audienceActivity
        self.budget = budget
        self.channel = channel
        self.reportSummary = reportSummary
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        audience = try container.decodeIfPresent("audience")
        audienceActivity = try container.decodeIfPresent("audience_activity")
        budget = try container.decodeIfPresent("budget")
        channel = try container.decodeIfPresent("channel")
        reportSummary = try container.decodeIfPresent("report_summary")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(audience, forKey: "audience")
        try container.encodeIfPresent(audienceActivity, forKey: "audience_activity")
        try container.encodeIfPresent(budget, forKey: "budget")
        try container.encodeIfPresent(channel, forKey: "channel")
        try container.encodeIfPresent(reportSummary, forKey: "report_summary")
    }

}
