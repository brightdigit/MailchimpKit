//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** A summary of the subscribers who were removed from an Automation workflow. */
public struct RemovedSubscribers: Codable, Equatable, Content {

    /** A list of link types and descriptions for the API schema documents. */
    public var links: [ResourceLink]?

    /** An array of objects, each representing a subscriber who was removed from an Automation workflow. */
    public var subscribers: [SubscriberRemovedFromAutomationWorkflow]?

    /** The total number of items matching the query regardless of pagination. */
    public var totalItems: Int?

    /** A string that uniquely identifies an Automation workflow. */
    public var workflowId: String?

    public init(links: [ResourceLink]? = nil, subscribers: [SubscriberRemovedFromAutomationWorkflow]? = nil, totalItems: Int? = nil, workflowId: String? = nil) {
        self.links = links
        self.subscribers = subscribers
        self.totalItems = totalItems
        self.workflowId = workflowId
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        links = try container.decodeArrayIfPresent("_links")
        subscribers = try container.decodeArrayIfPresent("subscribers")
        totalItems = try container.decodeIfPresent("total_items")
        workflowId = try container.decodeIfPresent("workflow_id")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(links, forKey: "_links")
        try container.encodeIfPresent(subscribers, forKey: "subscribers")
        try container.encodeIfPresent(totalItems, forKey: "total_items")
        try container.encodeIfPresent(workflowId, forKey: "workflow_id")
    }

}
