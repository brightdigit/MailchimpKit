//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** For sent campaigns, a summary of opens and clicks. */
public struct CampaignReportSummary1: Codable, Equatable, Content {

    /** The number of unique clicks divided by the total number of successful deliveries. */
    public var clickRate: Double?

    /** The total number of clicks for an campaign. */
    public var clicks: Int?

    /** The number of unique opens divided by the total number of successful deliveries. */
    public var openRate: Double?

    /** The total number of opens for a campaign. */
    public var opens: Int?

    /** The number of unique clicks. */
    public var subscriberClicks: Int?

    /** The number of unique opens. */
    public var uniqueOpens: Int?

    public init(clickRate: Double? = nil, clicks: Int? = nil, openRate: Double? = nil, opens: Int? = nil, subscriberClicks: Int? = nil, uniqueOpens: Int? = nil) {
        self.clickRate = clickRate
        self.clicks = clicks
        self.openRate = openRate
        self.opens = opens
        self.subscriberClicks = subscriberClicks
        self.uniqueOpens = uniqueOpens
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        clickRate = try container.decodeIfPresent("click_rate")
        clicks = try container.decodeIfPresent("clicks")
        openRate = try container.decodeIfPresent("open_rate")
        opens = try container.decodeIfPresent("opens")
        subscriberClicks = try container.decodeIfPresent("subscriber_clicks")
        uniqueOpens = try container.decodeIfPresent("unique_opens")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(clickRate, forKey: "click_rate")
        try container.encodeIfPresent(clicks, forKey: "clicks")
        try container.encodeIfPresent(openRate, forKey: "open_rate")
        try container.encodeIfPresent(opens, forKey: "opens")
        try container.encodeIfPresent(subscriberClicks, forKey: "subscriber_clicks")
        try container.encodeIfPresent(uniqueOpens, forKey: "unique_opens")
    }

}
