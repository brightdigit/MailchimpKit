//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** Member activity events. */
public struct MemberActivity: Codable, Equatable, Content {

    /** The type of action recorded for the subscriber. */
    public var action: String?

    /** The web-based ID for the campaign. */
    public var campaignId: String?

    /** The ID of the parent campaign. */
    public var parentCampaign: String?

    /** The date and time recorded for the action. */
    public var timestamp: DateTime?

    /** If set, the campaign's title. */
    public var title: String?

    /** The type of campaign that was sent. */
    public var type: String?

    /** For clicks, the URL the subscriber clicked on. */
    public var url: String?

    public init(action: String? = nil, campaignId: String? = nil, parentCampaign: String? = nil, timestamp: DateTime? = nil, title: String? = nil, type: String? = nil, url: String? = nil) {
        self.action = action
        self.campaignId = campaignId
        self.parentCampaign = parentCampaign
        self.timestamp = timestamp
        self.title = title
        self.type = type
        self.url = url
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        action = try container.decodeIfPresent("action")
        campaignId = try container.decodeIfPresent("campaign_id")
        parentCampaign = try container.decodeIfPresent("parent_campaign")
        timestamp = try container.decodeIfPresent("timestamp")
        title = try container.decodeIfPresent("title")
        type = try container.decodeIfPresent("type")
        url = try container.decodeIfPresent("url")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(action, forKey: "action")
        try container.encodeIfPresent(campaignId, forKey: "campaign_id")
        try container.encodeIfPresent(parentCampaign, forKey: "parent_campaign")
        try container.encodeIfPresent(timestamp, forKey: "timestamp")
        try container.encodeIfPresent(title, forKey: "title")
        try container.encodeIfPresent(type, forKey: "type")
        try container.encodeIfPresent(url, forKey: "url")
    }

}
