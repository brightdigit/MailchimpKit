//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** A summary of social activity for the campaign, tracked by EepURL. */
public struct EepurlActivity: Codable, Equatable, Content {

    /** A list of link types and descriptions for the API schema documents. */
    public var links: [ResourceLink]?

    /** The unique id for the campaign. */
    public var campaignId: String?

    public var clicks: ClickSummary?

    /** The shortened link used for tracking. */
    public var eepurl: String?

    /** A summary of the top referrers for the campaign. */
    public var referrers: [Referrer]?

    /** The total number of items matching the query regardless of pagination. */
    public var totalItems: Int?

    public var twitter: TwitterStats?

    public init(links: [ResourceLink]? = nil, campaignId: String? = nil, clicks: ClickSummary? = nil, eepurl: String? = nil, referrers: [Referrer]? = nil, totalItems: Int? = nil, twitter: TwitterStats? = nil) {
        self.links = links
        self.campaignId = campaignId
        self.clicks = clicks
        self.eepurl = eepurl
        self.referrers = referrers
        self.totalItems = totalItems
        self.twitter = twitter
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        links = try container.decodeArrayIfPresent("_links")
        campaignId = try container.decodeIfPresent("campaign_id")
        clicks = try container.decodeIfPresent("clicks")
        eepurl = try container.decodeIfPresent("eepurl")
        referrers = try container.decodeArrayIfPresent("referrers")
        totalItems = try container.decodeIfPresent("total_items")
        twitter = try container.decodeIfPresent("twitter")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(links, forKey: "_links")
        try container.encodeIfPresent(campaignId, forKey: "campaign_id")
        try container.encodeIfPresent(clicks, forKey: "clicks")
        try container.encodeIfPresent(eepurl, forKey: "eepurl")
        try container.encodeIfPresent(referrers, forKey: "referrers")
        try container.encodeIfPresent(totalItems, forKey: "total_items")
        try container.encodeIfPresent(twitter, forKey: "twitter")
    }

}
