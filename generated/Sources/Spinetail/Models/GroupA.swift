//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** Stats for Group A. */
public struct GroupA: Codable, Equatable, Content {

    /** The percentage of total clicks for Group A. */
    public var clickPercentagea: Double?

    /** The total number of clicks for Group A. */
    public var totalClicksa: Int?

    /** The percentage of unique clicks for Group A. */
    public var uniqueClickPercentagea: Double?

    /** The number of unique clicks for Group A. */
    public var uniqueClicksa: Int?

    public init(clickPercentagea: Double? = nil, totalClicksa: Int? = nil, uniqueClickPercentagea: Double? = nil, uniqueClicksa: Int? = nil) {
        self.clickPercentagea = clickPercentagea
        self.totalClicksa = totalClicksa
        self.uniqueClickPercentagea = uniqueClickPercentagea
        self.uniqueClicksa = uniqueClicksa
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        clickPercentagea = try container.decodeIfPresent("click_percentage_a")
        totalClicksa = try container.decodeIfPresent("total_clicks_a")
        uniqueClickPercentagea = try container.decodeIfPresent("unique_click_percentage_a")
        uniqueClicksa = try container.decodeIfPresent("unique_clicks_a")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(clickPercentagea, forKey: "click_percentage_a")
        try container.encodeIfPresent(totalClicksa, forKey: "total_clicks_a")
        try container.encodeIfPresent(uniqueClickPercentagea, forKey: "unique_click_percentage_a")
        try container.encodeIfPresent(uniqueClicksa, forKey: "unique_clicks_a")
    }

}
