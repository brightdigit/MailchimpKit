//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** Extra options for some merge field types. */
public struct MergeFieldOptions2: Codable, Equatable, Content {

    /** In a radio or dropdown non-group field, the available options for members to pick from. */
    public var choices: [String]?

    /** In a date or birthday field, the format of the date. */
    public var dateFormat: String?

    /** In an address field, the default country code if none supplied. */
    public var defaultCountry: Int?

    /** In a phone field, the phone number type: US or International. */
    public var phoneFormat: String?

    public init(choices: [String]? = nil, dateFormat: String? = nil, defaultCountry: Int? = nil, phoneFormat: String? = nil) {
        self.choices = choices
        self.dateFormat = dateFormat
        self.defaultCountry = defaultCountry
        self.phoneFormat = phoneFormat
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        choices = try container.decodeArrayIfPresent("choices")
        dateFormat = try container.decodeIfPresent("date_format")
        defaultCountry = try container.decodeIfPresent("default_country")
        phoneFormat = try container.decodeIfPresent("phone_format")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(choices, forKey: "choices")
        try container.encodeIfPresent(dateFormat, forKey: "date_format")
        try container.encodeIfPresent(defaultCountry, forKey: "default_country")
        try container.encodeIfPresent(phoneFormat, forKey: "phone_format")
    }

}
