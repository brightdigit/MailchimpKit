//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** A folder used to organize campaigns. */
public struct CampaignFolder: Codable, Equatable, Content {

    /** A list of link types and descriptions for the API schema documents. */
    public var links: [ResourceLink]?

    /** The number of campaigns in the folder. */
    public var count: Int?

    /** A string that uniquely identifies this campaign folder. */
    public var id: String?

    /** The name of the folder. */
    public var name: String?

    public init(links: [ResourceLink]? = nil, count: Int? = nil, id: String? = nil, name: String? = nil) {
        self.links = links
        self.count = count
        self.id = id
        self.name = name
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        links = try container.decodeArrayIfPresent("_links")
        count = try container.decodeIfPresent("count")
        id = try container.decodeIfPresent("id")
        name = try container.decodeIfPresent("name")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(links, forKey: "_links")
        try container.encodeIfPresent(count, forKey: "count")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(name, forKey: "name")
    }

}
