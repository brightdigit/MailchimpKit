//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** Available when uploading an archive to create campaign content. The archive should include all campaign content and images. [Learn more](https://mailchimp.com/help/import-a-custom-html-template/). */
public struct UploadArchive: Codable, Equatable, Content {

    /** The type of encoded file. Defaults to zip. */
    public enum ArchiveType: String, Codable, Equatable, CaseIterable {
        case zip = "zip"
        case tarGz = "tar.gz"
        case tarBz2 = "tar.bz2"
        case tar = "tar"
        case tgz = "tgz"
        case tbz = "tbz"
    }

    /** The base64-encoded representation of the archive file. */
    public var archiveContent: String

    /** The type of encoded file. Defaults to zip. */
    public var archiveType: ArchiveType?

    public init(archiveContent: String, archiveType: ArchiveType? = nil) {
        self.archiveContent = archiveContent
        self.archiveType = archiveType
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        archiveContent = try container.decode("archive_content")
        archiveType = try container.decodeIfPresent("archive_type")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(archiveContent, forKey: "archive_content")
        try container.encodeIfPresent(archiveType, forKey: "archive_type")
    }

}
