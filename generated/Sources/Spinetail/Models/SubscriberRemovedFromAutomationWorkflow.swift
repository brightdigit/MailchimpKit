//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** A summary of a subscriber removed from an Automation workflow. */
public struct SubscriberRemovedFromAutomationWorkflow: Codable, Equatable, Content {

    /** A list of link types and descriptions for the API schema documents. */
    public var links: [ResourceLink]?

    /** The list member's email address. */
    public var emailAddress: String?

    /** The MD5 hash of the lowercase version of the list member's email address. */
    public var id: String?

    /** A string that uniquely identifies a list. */
    public var listId: String?

    /** A string that uniquely identifies an Automation workflow. */
    public var workflowId: String?

    public init(links: [ResourceLink]? = nil, emailAddress: String? = nil, id: String? = nil, listId: String? = nil, workflowId: String? = nil) {
        self.links = links
        self.emailAddress = emailAddress
        self.id = id
        self.listId = listId
        self.workflowId = workflowId
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        links = try container.decodeArrayIfPresent("_links")
        emailAddress = try container.decodeIfPresent("email_address")
        id = try container.decodeIfPresent("id")
        listId = try container.decodeIfPresent("list_id")
        workflowId = try container.decodeIfPresent("workflow_id")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(links, forKey: "_links")
        try container.encodeIfPresent(emailAddress, forKey: "email_address")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(listId, forKey: "list_id")
        try container.encodeIfPresent(workflowId, forKey: "workflow_id")
    }

}
