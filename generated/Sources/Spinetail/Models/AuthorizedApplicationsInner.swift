//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** An authorized app. */
public struct AuthorizedApplicationsInner: Codable, Equatable, Content {

    /** A list of link types and descriptions for the API schema documents. */
    public var links: [ResourceLink]?

    /** A short description of the application. */
    public var description: String?

    /** The ID for the application. */
    public var id: Int?

    /** The name of the application. */
    public var name: String?

    /** An array of usernames for users who have linked the app. */
    public var users: [String]?

    public init(links: [ResourceLink]? = nil, description: String? = nil, id: Int? = nil, name: String? = nil, users: [String]? = nil) {
        self.links = links
        self.description = description
        self.id = id
        self.name = name
        self.users = users
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        links = try container.decodeArrayIfPresent("_links")
        description = try container.decodeIfPresent("description")
        id = try container.decodeIfPresent("id")
        name = try container.decodeIfPresent("name")
        users = try container.decodeArrayIfPresent("users")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(links, forKey: "_links")
        try container.encodeIfPresent(description, forKey: "description")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(users, forKey: "users")
    }

}
