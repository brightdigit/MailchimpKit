//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
public struct ItemsInner: Codable, Equatable, Content {

    /** The item type. */
    public enum `Type`: String, Codable, Equatable, CaseIterable {
        case success = "success"
        case warning = "warning"
        case error = "error"
    }

    /** Details about the specific feedback item. */
    public var details: String?

    /** The heading for the specific item. */
    public var heading: String?

    /** The ID for the specific item. */
    public var id: Int?

    /** The item type. */
    public var type: `Type`?

    public init(details: String? = nil, heading: String? = nil, id: Int? = nil, type: `Type`? = nil) {
        self.details = details
        self.heading = heading
        self.id = id
        self.type = type
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        details = try container.decodeIfPresent("details")
        heading = try container.decodeIfPresent("heading")
        id = try container.decodeIfPresent("id")
        type = try container.decodeIfPresent("type")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(details, forKey: "details")
        try container.encodeIfPresent(heading, forKey: "heading")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(type, forKey: "type")
    }

}
