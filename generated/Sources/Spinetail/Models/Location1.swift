//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** Subscriber location information. */
public struct Location1: Codable, Equatable, Content {

    /** The unique code for the location country. */
    public var countryCode: String?

    /** The offset for timezones where daylight saving time is observed. */
    public var dstoff: Int?

    /** The time difference in hours from GMT. */
    public var gmtoff: Int?

    /** The location latitude. */
    public var latitude: Double?

    /** The location longitude. */
    public var longitude: Double?

    /** The timezone for the location. */
    public var timezone: String?

    public init(countryCode: String? = nil, dstoff: Int? = nil, gmtoff: Int? = nil, latitude: Double? = nil, longitude: Double? = nil, timezone: String? = nil) {
        self.countryCode = countryCode
        self.dstoff = dstoff
        self.gmtoff = gmtoff
        self.latitude = latitude
        self.longitude = longitude
        self.timezone = timezone
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        countryCode = try container.decodeIfPresent("country_code")
        dstoff = try container.decodeIfPresent("dstoff")
        gmtoff = try container.decodeIfPresent("gmtoff")
        latitude = try container.decodeIfPresent("latitude")
        longitude = try container.decodeIfPresent("longitude")
        timezone = try container.decodeIfPresent("timezone")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(countryCode, forKey: "country_code")
        try container.encodeIfPresent(dstoff, forKey: "dstoff")
        try container.encodeIfPresent(gmtoff, forKey: "gmtoff")
        try container.encodeIfPresent(latitude, forKey: "latitude")
        try container.encodeIfPresent(longitude, forKey: "longitude")
        try container.encodeIfPresent(timezone, forKey: "timezone")
    }

}
