//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** A collection of a cart's line items. */
public struct CartLines: Codable, Equatable, Content {

    /** A list of link types and descriptions for the API schema documents. */
    public var links: [ResourceLink]?

    /** The cart id. */
    public var cartId: String?

    /** An array of objects, each representing a cart's line item. */
    public var lines: [ECommerceCartLineItem]?

    /** The store id. */
    public var storeId: String?

    /** The total number of items matching the query regardless of pagination. */
    public var totalItems: Int?

    public init(links: [ResourceLink]? = nil, cartId: String? = nil, lines: [ECommerceCartLineItem]? = nil, storeId: String? = nil, totalItems: Int? = nil) {
        self.links = links
        self.cartId = cartId
        self.lines = lines
        self.storeId = storeId
        self.totalItems = totalItems
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        links = try container.decodeArrayIfPresent("_links")
        cartId = try container.decodeIfPresent("cart_id")
        lines = try container.decodeArrayIfPresent("lines")
        storeId = try container.decodeIfPresent("store_id")
        totalItems = try container.decodeIfPresent("total_items")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(links, forKey: "_links")
        try container.encodeIfPresent(cartId, forKey: "cart_id")
        try container.encodeIfPresent(lines, forKey: "lines")
        try container.encodeIfPresent(storeId, forKey: "store_id")
        try container.encodeIfPresent(totalItems, forKey: "total_items")
    }

}
