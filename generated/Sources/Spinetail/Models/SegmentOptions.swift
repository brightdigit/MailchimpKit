//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** An object representing all segmentation options. */
public struct SegmentOptions: Codable, Equatable, Content {

    /** Segment match type. */
    public enum Match: String, Codable, Equatable, CaseIterable {
        case any = "any"
        case all = "all"
    }

    /** Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas). */
    public var conditions: [[String: Any]]?

    /** Segment match type. */
    public var match: Match?

    /** The id for an existing saved segment. */
    public var savedSegmentId: Int?

    public init(conditions: [[String: Any]]? = nil, match: Match? = nil, savedSegmentId: Int? = nil) {
        self.conditions = conditions
        self.match = match
        self.savedSegmentId = savedSegmentId
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        conditions = try container.decodeAnyIfPresent("conditions")
        match = try container.decodeIfPresent("match")
        savedSegmentId = try container.decodeIfPresent("saved_segment_id")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeAnyIfPresent(conditions, forKey: "conditions")
        try container.encodeIfPresent(match, forKey: "match")
        try container.encodeIfPresent(savedSegmentId, forKey: "saved_segment_id")
    }

}
