//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** An object describing the open activity for the campaign. */
public struct Opens: Codable, Equatable, Content {

    /** The date and time of the last recorded open in ISO 8601 format. */
    public var lastOpen: DateTime?

    /** The number of unique opens divided by the total number of successful deliveries. */
    public var openRate: Double?

    /** The total number of opens for a campaign. */
    public var opensTotal: Int?

    /** The total number of unique opens. */
    public var uniqueOpens: Int?

    public init(lastOpen: DateTime? = nil, openRate: Double? = nil, opensTotal: Int? = nil, uniqueOpens: Int? = nil) {
        self.lastOpen = lastOpen
        self.openRate = openRate
        self.opensTotal = opensTotal
        self.uniqueOpens = uniqueOpens
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        lastOpen = try container.decodeIfPresent("last_open")
        openRate = try container.decodeIfPresent("open_rate")
        opensTotal = try container.decodeIfPresent("opens_total")
        uniqueOpens = try container.decodeIfPresent("unique_opens")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(lastOpen, forKey: "last_open")
        try container.encodeIfPresent(openRate, forKey: "open_rate")
        try container.encodeIfPresent(opensTotal, forKey: "opens_total")
        try container.encodeIfPresent(uniqueOpens, forKey: "unique_opens")
    }

}
