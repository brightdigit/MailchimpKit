//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
public struct GetAllFacebookAds200ResponseFacebookAdsInnerAllOf1: Codable, Equatable, Content {

    public var emailSourceName: String?

    public var endTime: DateTime?

    public var needsAttention: Bool?

    public var pausedAt: DateTime?

    public var wasCanceledByFacebook: Bool?

    public init(emailSourceName: String? = nil, endTime: DateTime? = nil, needsAttention: Bool? = nil, pausedAt: DateTime? = nil, wasCanceledByFacebook: Bool? = nil) {
        self.emailSourceName = emailSourceName
        self.endTime = endTime
        self.needsAttention = needsAttention
        self.pausedAt = pausedAt
        self.wasCanceledByFacebook = wasCanceledByFacebook
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        emailSourceName = try container.decodeIfPresent("email_source_name")
        endTime = try container.decodeIfPresent("end_time")
        needsAttention = try container.decodeIfPresent("needs_attention")
        pausedAt = try container.decodeIfPresent("paused_at")
        wasCanceledByFacebook = try container.decodeIfPresent("was_canceled_by_facebook")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(emailSourceName, forKey: "email_source_name")
        try container.encodeIfPresent(endTime, forKey: "end_time")
        try container.encodeIfPresent(needsAttention, forKey: "needs_attention")
        try container.encodeIfPresent(pausedAt, forKey: "paused_at")
        try container.encodeIfPresent(wasCanceledByFacebook, forKey: "was_canceled_by_facebook")
    }

}
