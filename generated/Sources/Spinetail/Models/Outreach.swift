//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** The outreach associated with this order. For example, an email campaign or Facebook ad. */
public struct Outreach: Codable, Equatable, Content {

    /** A unique identifier for the outreach. Can be an email campaign ID. */
    public var id: String?

    /** The name for the outreach. */
    public var name: String?

    /** The date and time the Outreach was published in ISO 8601 format. */
    public var publishedTime: DateTime?

    /** The type of the outreach. */
    public var type: String?

    public init(id: String? = nil, name: String? = nil, publishedTime: DateTime? = nil, type: String? = nil) {
        self.id = id
        self.name = name
        self.publishedTime = publishedTime
        self.type = type
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        id = try container.decodeIfPresent("id")
        name = try container.decodeIfPresent("name")
        publishedTime = try container.decodeIfPresent("published_time")
        type = try container.decodeIfPresent("type")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(publishedTime, forKey: "published_time")
        try container.encodeIfPresent(type, forKey: "type")
    }

}
