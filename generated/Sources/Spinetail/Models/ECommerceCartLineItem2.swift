//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

import PrchModel
/** Information about a specific cart line item. */
public struct ECommerceCartLineItem2: Codable, Equatable, Content {

    /** The price of a cart line item. */
    public var price: Double?

    /** A unique identifier for the product associated with the cart line item. */
    public var productId: String?

    /** A unique identifier for the product variant associated with the cart line item. */
    public var productVariantId: String?

    /** The quantity of a cart line item. */
    public var quantity: Int?

    public init(price: Double? = nil, productId: String? = nil, productVariantId: String? = nil, quantity: Int? = nil) {
        self.price = price
        self.productId = productId
        self.productVariantId = productVariantId
        self.quantity = quantity
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        price = try container.decodeIfPresent("price")
        productId = try container.decodeIfPresent("product_id")
        productVariantId = try container.decodeIfPresent("product_variant_id")
        quantity = try container.decodeIfPresent("quantity")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(price, forKey: "price")
        try container.encodeIfPresent(productId, forKey: "product_id")
        try container.encodeIfPresent(productVariantId, forKey: "product_variant_id")
        try container.encodeIfPresent(quantity, forKey: "quantity")
    }

}
