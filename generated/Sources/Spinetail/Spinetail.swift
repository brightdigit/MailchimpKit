//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import PrchModel

public typealias DateTime = Date
public typealias File = Data
public typealias ID = UUID

public enum Surveys {}
public enum AccountExport {}
public enum AccountExports {}
public enum ActivityFeed {}
public enum AuthorizedApps {}
public enum Automations {}
public enum BatchWebhooks {}
public enum Batches {}
public enum CampaignFolders {}
public enum Campaigns {}
public enum ConnectedSites {}
public enum Conversations {}
public enum CustomerJourneys {}
public enum Ecommerce {}
public enum FacebookAds {}
public enum FileManager {}
public enum LandingPages {}
public enum Lists {}
public enum Ping {}
public enum Reporting {}
public enum Reports {}
public enum Root {}
public enum SearchCampaigns {}
public enum SearchMembers {}
public enum TemplateFolders {}
public enum Templates {}
public enum VerifiedDomains {}

public protocol BaseURLProvider {
  var baseURLComponents: URLComponents? { get }
}


public class SpinetailAPI: API {
  public init(baseURLProvider: BaseURLProvider) {
    self.baseURLProvider = baseURLProvider
  }

  public var isReady: Bool {
    baseURLProvider.baseURLComponents != nil
  }

  public let baseURLProvider: BaseURLProvider
  public var baseURLComponents: URLComponents {
    guard let baseURLComponents = baseURLProvider.baseURLComponents else {
      assertionFailure("BaseURLProvider is not ready")
      return URLComponents()
    }

    return baseURLComponents
  }

  public var headers: [String: String] {
    Defaults.headers
  }

  public var encoder: any Encoder<Data> {
    Defaults.encoder
  }

  public var decoder: any Decoder<Data> {
    Defaults.decoder
  }

  public typealias RequestDataType = Data

  public typealias ResponseDataType = Data
}

extension JSONDecoder {
  convenience init(dateFormatter: DateFormatter) {
    self.init()
    self.dateDecodingStrategy = .formatted(dateFormatter)
  }
}

extension JSONEncoder {
  convenience init(dateFormatter: DateFormatter) {
    self.init()
    self.dateEncodingStrategy = .formatted(dateFormatter)
  }
}

extension SpinetailAPI {
  enum Defaults {
    public static let dateEncodingFormatter = DateFormatter(formatString: "yyyy-MM-dd'T'HH:mm:ssZZZZZ",
                                                            locale: Locale(identifier: "en_US_POSIX"),
                                                            calendar: Calendar(identifier: .gregorian))
    
    public static let encoder: any Encoder<Data> = JSONEncoder(dateFormatter: Self.dateEncodingFormatter)

    public static let decoder: any Decoder<Data> = JSONDecoder(dateFormatter: Self.dateEncodingFormatter)

    public static let headers: [String: String] =
      ["Content-Type": "application/json; charset=utf-8"]
  }
}
